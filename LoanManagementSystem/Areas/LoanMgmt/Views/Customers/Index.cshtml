@using LoanManagementSystem.Models.Enums
@using Microsoft.AspNetCore.Identity

@model IEnumerable<LoanManagementSystem.Models.Customer>

@inject UserManager<IdentityUser> _userManager

@{
    ViewData["Title"] = "Index";
      var user = await _userManager.GetUserAsync(this.User);
    var isAdmin = await _userManager.IsInRoleAsync(user, MyIdentityRoleNames.LoanAdmin.ToString());
}

<p>
    
    @if (isAdmin)
    {
        <a class="btn btn-primary disabled" asp-action="Create">Create New</a>
         <a class="btn btn-warning" asp-area="LoanMgmt" asp-controller="Approvals" 
                       asp-action="Create">Approvels</a>
    }
    else {
        <a class="btn btn-primary " href="#">Create New</a>
           <a class="btn btn-warning disabled" asp-area="LoanMgmt" asp-controller="Approvals" 
                       asp-action="Create">Approvels</a>                  
    }         
</p>


<style>
table, th, td {
  border: 4px solid white;
  border-collapse: collapse;
  
}
th, td {
  background-color:cornsilk;
}
body{
        
        background-color:aqua;
        background-repeat:no-repeat;
        background-attachment:fixed;
        background-size:100%;
          }
</style>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phonenumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plan)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phonenumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plan.PlanType)
            </td>
            <td>
              @if (isAdmin)
              {
                <a class="btn btn-primary disabled" asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> 
                 <a class="btn btn-primary disabled" asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
              }
                else {
                 <a class="btn btn-primary" href="#">Edit</a>
                 <a class="btn btn-primary" href="#">Delete</a>
                }   
                <a  class="btn btn-primary"  asp-action="Details" asp-route-id="@item.CustomerId">Details</a> 
               
               
            </td>
        </tr>
                     
                
}                   
    </tbody>
</table>
